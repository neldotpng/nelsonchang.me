{"map":"{\"version\":3,\"sources\":[\"/Users/PHOENIX/GitHub/nelsonchang.me/src/pages/Home.js\",\"/Users/PHOENIX/GitHub/nelsonchang.me/src/serviceWorker.js\",\"/Users/PHOENIX/GitHub/nelsonchang.me/src/index.js\"],\"names\":[\"Home\",\"react_default\",\"a\",\"createElement\",\"className\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"pages_Home\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"oPA8BeA,0LAzBX,OACEC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAA,CAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,gBACZH,EAAAC,EAAAC,cAAA,OAAA,KAAA,iCACAF,EAAAC,EAAAC,cAAA,OAAA,KAAA,kCAEFF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,sCACZH,EAAAC,EAAAC,cAAA,OAAA,KAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAA,KAAA,4BAEFF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,sCACZH,EAAAC,EAAAC,cAAA,OAAA,KAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAA,KAAA,2BAEFF,EAAAC,EAAAC,cAAA,KAAA,CAAIC,UAAU,4DACZH,EAAAC,EAAAC,cAAA,OAAA,KAAA,kCACAF,EAAAC,EAAAC,cAAA,OAAA,KAAA,4CAnBOE,EAAAA,YCSCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOX,EAAAC,EAAAC,cAACU,EAAD,MAAUC,SAASC,eAAe,SD0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport '../scss/Home.scss';\\n\\nclass Home extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"Home\\\">\\n        <header className=\\\"Home-header\\\">\\n          <h1 className=\\\"Home-marquee\\\">\\n            <span>Nelson Chang Nelson Chang&nbsp;</span>\\n            <span>Nelson Chang Nelson Chang&nbsp;</span>\\n          </h1>\\n          <h2 className=\\\"Home-marquee Home-marquee__reverse\\\">\\n            <span>Portfolio Portfolio&nbsp;</span>\\n            <span>Portfolio Portfolio&nbsp;</span>\\n          </h2>\\n          <h3 className=\\\"Home-marquee Home-marquee__outline\\\">\\n            <span>Under Construction&nbsp;</span>\\n            <span>Under Construction&nbsp;</span>\\n          </h3>\\n          <h3 className=\\\"Home-marquee Home-marquee__reverse Home-marquee__outline\\\">\\n            <span>S/S 2019 S/S 2019 S/S 2019&nbsp;</span>\\n            <span>S/S 2019 S/S 2019 S/S 2019&nbsp;</span>\\n          </h3>\\n        </header>\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default Home;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './scss/index.scss';\\nimport './scss/reset.scss';\\nimport Home from './pages/Home';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<Home />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,n,a){},16:function(e,n,a){},18:function(e,n,a){},20:function(e,n,a){\"use strict\";a.r(n);var t=a(0),o=a.n(t),r=a(2),l=a.n(r),c=(a(14),a(16),a(3)),m=a(4),s=a(6),u=a(5),i=a(7),h=(a(18),function(e){function n(){return Object(c.a)(this,n),Object(s.a)(this,Object(u.a)(n).apply(this,arguments))}return Object(i.a)(n,e),Object(m.a)(n,[{key:\"render\",value:function(){return o.a.createElement(\"div\",{className:\"Home\"},o.a.createElement(\"header\",{className:\"Home-header\"},o.a.createElement(\"h1\",{className:\"Home-marquee\"},o.a.createElement(\"span\",null,\"Nelson Chang Nelson Chang\\xa0\"),o.a.createElement(\"span\",null,\"Nelson Chang Nelson Chang\\xa0\")),o.a.createElement(\"h2\",{className:\"Home-marquee Home-marquee__reverse\"},o.a.createElement(\"span\",null,\"Portfolio Portfolio\\xa0\"),o.a.createElement(\"span\",null,\"Portfolio Portfolio\\xa0\")),o.a.createElement(\"h3\",{className:\"Home-marquee Home-marquee__outline\"},o.a.createElement(\"span\",null,\"Under Construction\\xa0\"),o.a.createElement(\"span\",null,\"Under Construction\\xa0\")),o.a.createElement(\"h3\",{className:\"Home-marquee Home-marquee__reverse Home-marquee__outline\"},o.a.createElement(\"span\",null,\"S/S 2019 S/S 2019 S/S 2019\\xa0\"),o.a.createElement(\"span\",null,\"S/S 2019 S/S 2019 S/S 2019\\xa0\"))))}}]),n}(t.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(o.a.createElement(h,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,n,a){e.exports=a(20)}},[[8,2,1]]]);","extractedComments":[]}